import{_ as s,o as n,c as a,O as l}from"./chunks/framework.786f5604.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"dsa-notes/interview/sliding-window.md","filePath":"dsa-notes/interview/sliding-window.md"}'),o={name:"dsa-notes/interview/sliding-window.md"},p=l(`<p>Here&#39;s the Markdown for the problems categorized under the <strong>Sliding Window</strong> topic:</p><h3 id="sliding-window" tabindex="-1">Sliding Window <a class="header-anchor" href="#sliding-window" aria-label="Permalink to &quot;Sliding Window&quot;">​</a></h3><h2 id="_1004-max-consecutive-ones-iii" tabindex="-1">1004. Max Consecutive Ones III <a class="header-anchor" href="#_1004-max-consecutive-ones-iii" aria-label="Permalink to &quot;1004. Max Consecutive Ones III&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    O(n) time complexity</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    O(1) space complexity</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">longestOnes</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">nums</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> List</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">k</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        Find the max length of sliding window that may contain up to k zeros</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">        zero_count </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">        i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> j</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">enumerate</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">nums</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># NO NEED TO CHECK num == 1 since it doesn&#39;t affect window size</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># if num == 1:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;">#     pass # don&#39;t use continue here, we still want to update \`res\`!</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># elif num == 0:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                zero_count </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> zero_count </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> k </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> j</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> nums</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                        zero_count </span><span style="color:#89DDFF;">-=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">                    i </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">res</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> j</span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;">i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> res</span></span></code></pre></div><h2 id="_30-substring-with-concatenation-of-all-words" tabindex="-1">30. Substring with Concatenation of All Words <a class="header-anchor" href="#_30-substring-with-concatenation-of-all-words" aria-label="Permalink to &quot;30. Substring with Concatenation of All Words&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    O(n) time complexity</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    O(n) space complexity</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">findSubstring</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">s</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">words</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> List</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">])</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> List</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        Let wordlen = len(words[0])</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        Time O(len(s) * wordlen)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        Use two hashmaps + two pointers</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        - \`need\` one hashmap to count all frequencies of each word in words</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        - \`window\` one to count current each substring&#39;s frequency in current window s[left:left+wordlen*len(words)]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        - \`matched_substrs\` count how many words in window has been matched</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        We consider all such windows starting from 0, 1, 2, 3, ... wordlen-1, each time moving left/right pointer by wordlen.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        This problem effectively is a combination of wordlen sliding window problems.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         i  ---&gt; i+w ---&gt; i+2w ----&gt; i+3w ----&gt; i+4w</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         (i+1)  ---&gt; (i+1)+w ---&gt; (i+1)+2w ----&gt; (i+1)+3w ----&gt; (i+1)+4w</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         (i+2)  ---&gt; (i+2)+w ---&gt; (i+2)+2w ----&gt; (i+2)+3w ----&gt; (i+2)+4w</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         (i+3)  ---&gt; (i+3)+w ---&gt; (i+3)+2w ----&gt; (i+3)+3w ----&gt; (i+3)+4w</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        If there&#39;s a mismatch at right pointer, we move left pointer to right of right pointer because</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        any window that includes the mismatch is invalid window. Also we need to reset counter to zero</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        If advancing right pointer causes excess of substring in current window, we shrink the window size by wordlen and</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        update substring count in \`window\` hashmap accordingly</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        need </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Counter</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">words</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># substr =&gt; frequency in \`words\`</span></span>
<span class="line"><span style="color:#A6ACCD;">        res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span></span>
<span class="line"><span style="color:#A6ACCD;">        wordlen </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">words</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> k </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">range</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">wordlen</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">            window </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Counter</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># window substr =&gt; frequency in s[left:right], right == i + wordlen*len(words)</span></span>
<span class="line"><span style="color:#A6ACCD;">            left </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> k</span></span>
<span class="line"><span style="color:#A6ACCD;">            matched_substrs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># sum of all frequencies in \`window\`. matched_substrs == sum(window.values())</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> right </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">range</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">left</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">s</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> wordlen</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> right </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> wordlen </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">s</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># out of bounds, cannot form window</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">break</span></span>
<span class="line"><span style="color:#A6ACCD;">                nextsubstr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">wordlen</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> nextsubstr </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> need</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># matched</span></span>
<span class="line"><span style="color:#A6ACCD;">                    window</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">nextsubstr</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">                    matched_substrs </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">nextsubstr</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> need</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">nextsubstr</span><span style="color:#89DDFF;">]:</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># matched, but excess, need move left pointer till no excess</span></span>
<span class="line"><span style="color:#A6ACCD;">                        oldsubstr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">wordlen</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">                        window</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">oldsubstr</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">                        matched_substrs </span><span style="color:#89DDFF;">-=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">                        left </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> wordlen</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> matched_substrs </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">words</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># yay! we found a permutation of words</span></span>
<span class="line"><span style="color:#A6ACCD;">                        res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">left</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">                        window</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">wordlen</span><span style="color:#89DDFF;">]]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">                        matched_substrs </span><span style="color:#89DDFF;">-=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">                        left </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> wordlen</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># mismatch, reset counter, and move left</span></span>
<span class="line"><span style="color:#A6ACCD;">                    window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">                    matched_substrs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">                    left </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> right </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> wordlen</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> res</span></span></code></pre></div><h2 id="_76-minimum-window-substring" tabindex="-1">76. Minimum Window Substring <a class="header-anchor" href="#_76-minimum-window-substring" aria-label="Permalink to &quot;76. Minimum Window Substring&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> collections </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Counter</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    O(n) time complexity</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    O(1) space complexity</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">minWindow</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">s</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">t</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        m</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> n </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">s</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">t</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> n </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> m</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        window</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> need </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Counter</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Counter</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">t</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> j</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> c </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">enumerate</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">s</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">            window</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">window</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">c</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#82AAFF;"> need</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">c</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#82AAFF;"> c </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> need</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> j</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">or</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                    res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">                window</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">]]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">                i </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> res</span></span></code></pre></div>`,8),t=[p];function e(c,r,y,D,F,i){return n(),a("div",null,t)}const d=s(o,[["render",e]]);export{C as __pageData,d as default};
