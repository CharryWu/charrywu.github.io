import{_ as e,o as t,c as s,O as i}from"./chunks/framework.786f5604.js";const f=JSON.parse('{"title":"System Design Tips","description":"","frontmatter":{},"headers":[],"relativePath":"fullstack/system-design-tips.md","filePath":"fullstack/system-design-tips.md"}'),a={name:"fullstack/system-design-tips.md"},n=i('<h1 id="system-design-tips" tabindex="-1">System Design Tips <a class="header-anchor" href="#system-design-tips" aria-label="Permalink to &quot;System Design Tips&quot;">​</a></h1><h2 id="functional-requirements-top-3" tabindex="-1">Functional Requirements (Top 3) <a class="header-anchor" href="#functional-requirements-top-3" aria-label="Permalink to &quot;Functional Requirements (Top 3)&quot;">​</a></h2><p>Functional requirements are your &quot;Users/Clients should be able to...&quot; statements. Oftentimes this is a back and fourth discussion with your interviewer. Ask targeted questions as if you were talking to a client, customer, or product manager (&quot;does the system need to do X?&quot;, &quot;what would happen if Y?&quot;) to arrive at a prioritized list of core features.</p><h2 id="non-functional-requirements-top-3" tabindex="-1">Non-functional Requirements (Top 3) <a class="header-anchor" href="#non-functional-requirements-top-3" aria-label="Permalink to &quot;Non-functional Requirements (Top 3)&quot;">​</a></h2><p>When evaluating non-functional requirements, it&#39;s crucial to uncover the distinct characteristics that make this system challenging or unique. To help you identify these, consider the following questions:</p><ul><li>CAP theorem: Does this system prioritize availability or consistency? Note, that in some cases, the answer is different depending on the part of the system -- as you&#39;ll see is the case here.</li><li>Read vs write ratio: is this a read heavy system or write heavy? Are either notably heavy for any reason?</li><li>Query access pattern: Is the access pattern of the system regular or are their patterns or bursts that require particular attention. For example, the holidays for shopping sites or popular events for ticket booking.</li></ul><h2 id="api-endpoints" tabindex="-1">API Endpoints <a class="header-anchor" href="#api-endpoints" aria-label="Permalink to &quot;API Endpoints&quot;">​</a></h2><p>Fullfil Each Functional Requirement</p><p>Go one-by-one through your functional requirements and add one, or sometimes several, external API endpoints needed to fulfill that requirement.</p>',9),o=[n];function r(l,u,c,h,p,d){return t(),s("div",null,o)}const y=e(a,[["render",r]]);export{f as __pageData,y as default};
